name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*  # Trigger on version tags like v1.0.0

jobs:
  # Step 1: Create a GitHub Release
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: taiki-e/create-gh-release-action@v1
        with:
          # Path to changelog file (optional)
          changelog: CHANGELOG.md
          # GitHub token for authentication (required)
          token: ${{ secrets.GITHUB_TOKEN }}

  # Step 2: Build and Upload Rust Binaries
  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: universal-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Cache Cargo Registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload Rust Binary to GitHub Release
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: netbolt
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
          # Exclude .d files using glob pattern
          include: target/release/netbolt*
          exclude: target/release/*.d
      